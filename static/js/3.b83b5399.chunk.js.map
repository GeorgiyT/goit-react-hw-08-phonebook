{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/pages/PhoneBook.module.css","components/redux/operations.js","components/redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/pages/PhoneBook.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","axios","defaults","baseURL","getFilter","state","phoneBook","filter","getContacts","contacts","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","acc","props","forEach","el","toLocaleLowerCase","alert","addContact","reset","this","fetchContact","onSubmit","className","styles","contactForm","type","pattern","title","required","onChange","React","Component","connect","dispatch","getState","a","token","set","userAuth","addContactRequest","post","responce","addContactSuccess","data","addContactError","operations","fetchContactRequest","get","fetchContactSuccess","fetchContactError","isLoading","isRequested","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","contactList__header","contactList","map","onClick","mapDispatchToProps","addFilter","filter__header","filter__input","PhoneBook","headers"],"mappings":"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","file":"static/js/3.b83b5399.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2E88I\",\"contactList__header\":\"ContactList_contactList__header__1QR2m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1a2dQ\",\"filter__header\":\"Filter_filter__header__2YbOm\",\"filter__input\":\"Filter_filter__input__2dXPI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headers\":\"PhoneBook_headers__ZXOuh\"};","import axios from \"axios\";\r\n\r\nimport token from \"../../auth/token\";\r\n\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError\r\n} from \"./action\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst fetchContact = () => async (dispatch, getState) => {\r\n  token.set(getState().userAuth.token);\r\n\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const responce = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactSuccess(responce.data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nconst addContact = contact => async (dispatch, getState) => {\r\n  token.set(getState().userAuth.token);\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const responce = await axios.post(\"/contacts\", contact);\r\n    dispatch(addContactSuccess(responce.data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async (dispatch, getState) => {\r\n  token.set(getState().userAuth.token);\r\n\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nexport { fetchContact, addContact, deleteContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getFilter = state => state.phoneBook.filter;\r\nexport const getContacts = state => state.phoneBook.contacts;\r\nexport const getVisibleContacts = createSelector([getFilter, getContacts], (filter, contacts) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as operations from \"../redux/operations.js\";\r\nimport { getContacts } from \"../redux/selectors\";\r\n\r\nclass ContactForm extends React.Component {\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n    fetchContact: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContact();\r\n  }\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    let acc = false;\r\n\r\n    this.props.contacts.forEach(el => el.name.toLocaleLowerCase() === this.state.name.toLocaleLowerCase() && (acc = true));\r\n\r\n    acc ? alert(`${this.state.name} is already in contacts`) : this.props.addContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Добавить</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { contacts: getContacts(state) };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: contact => dispatch(operations.addContact(contact)),\r\n  fetchContact: () => dispatch(operations.fetchContact())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as operations from \"../redux/operations\";\r\nimport { getVisibleContacts } from \"../redux/selectors\";\r\n\r\nconst ContactList = ({ contacts, isLoading, deleteContact }) => {\r\n  return (\r\n    <>\r\n      {isLoading && <h2 className={styles.contactList__header}>Загружаем....</h2>}\r\n      <ul className={styles.contactList}>\r\n        {contacts.map(el => (\r\n          <li key={el.id}>\r\n            {el.name}: {el.number}\r\n            <button type=\"button\" name={el.id} onClick={() => deleteContact(el.id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  isLoading: PropTypes.bool,\r\n  deleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { contacts: getVisibleContacts(state), isLoading: state.phoneBook.isRequested };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(operations.deleteContact(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addFilter } from \"../redux/action\";\r\nimport { getFilter } from \"../redux/selectors\";\r\n\r\nconst Filter = ({ value, addFilter }) => {\r\n  return (\r\n    <div className={styles.filter}>\r\n      <h3 className={styles.filter__header}>Find contacts by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={value}\r\n        onChange={e => addFilter(e.target.value)}\r\n        className={styles.filter__input}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  addFilter: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: getFilter(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addFilter\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport styles from \"./PhoneBook.module.css\";\r\n\r\nclass PhoneBook extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isLoading ? (\r\n          <h2 className={styles.contactList__header}>Загружаем....</h2>\r\n        ) : (\r\n          <>\r\n            <h2 className={styles.headers}>Phonebook</h2>\r\n            <ContactForm />\r\n            <h2 className={styles.headers}>Contacts</h2>\r\n            <Filter />\r\n            <ContactList />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.userAuth.isRequested\r\n});\r\n\r\nexport default connect(mapStateToProps)(PhoneBook);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3pLkQ\"};"],"sourceRoot":""}